name: RJ BlocX CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test RJ BlocX CLI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Get dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze --fatal-infos

      - name: Run tests
        run: dart test

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'

      - name: Get dependencies
        run: dart pub get

      - name: Test RJ BlocX CLI commands
        run: |
          # Activate local version
          dart pub global activate --source path .
          
          # Test help command
          rj_blocx --help
          
          # Test version command
          rj_blocx --version
          
          # Test create command validation
          mkdir -p /tmp/test_projects
          cd /tmp/test_projects
          echo "Testing RJ BlocX project creation..."

  build:
    name: Build RJ BlocX Executable
    runs-on: ubuntu-latest
    needs: [test, integration-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Get dependencies
        run: dart pub get

      - name: Build executable
        run: dart compile exe bin/rj_blocx.dart -o build/rj_blocx

      - name: Test executable
        run: |
          ./build/rj_blocx --version
          ./build/rj_blocx --help

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: rj_blocx-executable
          path: build/rj_blocx

  release:
    name: Create RJ BlocX Release
    runs-on: ubuntu-latest
    needs: [test, integration-test, build]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Get dependencies
        run: dart pub get

      - name: Build executables
        run: |
          mkdir -p build
          dart compile exe bin/rj_blocx.dart -o build/rj_blocx-linux

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: RJ BlocX CLI ${{ github.ref }}
          body: |
            ## üöÄ RJ BlocX CLI - Created by Rahul Verma
            
            ### What's Changed
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
            
            ### Installation
            
            ```bash
            dart pub global activate --source git https://github.com/RahulDev-flutter/blocx_cli.git
            ```
            
            ### Verification
            
            ```bash
            rj_blocx --version
            ```
            
            ### Quick Start
            
            ```bash
            rj_blocx create my_awesome_app
            ```
            
            ---
            
            **Made with ‚ù§Ô∏è by Rahul Verma**
          draft: false
          prerelease: false